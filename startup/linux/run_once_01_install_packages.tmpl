#!/bin/bash

{{ if eq .chezmoi.os "linux" }}

{{ if eq .chezmoi.osRelease.id "debian" }}

#############################
# install cmd
#############################

apt update
apt install -y \
  bat \
  curl \
  exa \
  fd-find \
  fzf \
  git \
  gh \
  neofetch \
  nnn \
  ripgrep \
  thefuck \
  tldr \
  tmux \
  tmuxinator \
  wget \
  python3.10-venv

#############################
# install go
#############################

GO_VERSION=1.22.1
wget "https://go.dev/dl/go${GO_VERSION}.linux-amd64.tar.gz"
sudo tar -C /usr/local -xzf "go${GO_VERSION}.linux-amd64.tar.gz"
rm -rf "go${GO_VERSION}.linux-amd64.tar.gz"

#############################
# DL from github releases
#############################

function dl_from_github_release() {
  GITHUB_USER=$1
  REPO_NAME=$2
  VERSION=$3
  RELEASE_FILE=$4
  ARCHIVED_FILE=$5

  RELEASE_FILE_EXT="${RELEASE_FILE##*.}"
  TMP_DIR="${GITHUB_USER}-${REPO_NAME}-tmp-dl-binary"

  mkdir -p $TMP_DIR && cd $TMP_DIR 
  wget https://github.com/${GITHUB_USER}/${REPO_NAME}/releases/download/${VERSION}/${RELEASE_FILE}

  case $RELEASE_FILE_EXT in
    gz)
      tar xz -f $RELEASE_FILE
      ;;
    zip)
      unzip $RELEASE_FILE
      ;;
    *)
      echo "Unsupported file type: $RELEASE_FILE_EXT"
      return 1
      ;;
  esac

  chmod +x $ARCHIVED_FILE
  mkdir -p ~/custombin && cp $ARCHIVED_FILE ~/custombin
  cd .. && rm -rf $TMP_DIR
}

KERNEL=$(uname -s | tr '[:upper:]' '[:lower:]')
MACHINE=$(uname -m | tr '[:upper:]' '[:lower:]')

# architecture が実行環境によって異なる
# コマンドで吸収するには限度があるためうまくいかない場合は都度 dl する
dl_from_github_release "extrawurst" "gitui" "v0.25.2" "gitui-${KERNEL}-musl.tar.gz" "gitui"
dl_from_github_release "derailed" "k9s" "v0.32.4" "k9s_Linux_amd64.tar.gz" "k9s"

#############################
# Install flox
#############################
VERSION="1.0.1"
wget "https://downloads.flox.dev/by-env/stable/deb/flox-${VERSION}.$(uname -m)-linux.deb" -O flox.deb
sudo dpkg -i flox.deb
rm -rf flox.deb

#############################
# dl by curl
#############################

# starship
curl -sS https://starship.rs/install.sh | sh -s -- --yes

# sheldon
curl --proto '=https' -fLsS https://rossmacarthur.github.io/install/crate.sh \
    | sudo bash -s -- --repo rossmacarthur/sheldon --to /usr/local/bin

#############################
# nvim build
# apt で入る nvim が古すぎるため 自前で build する
#############################

git clone https://github.com/neovim/neovim --depth=1
cd neovim
apt install -y libtool autoconf automake make cmake libncurses5-dev g++ gettext
make CMAKE_BUILD_TYPE=RelWithDebInfo
make install

{{ end }}

{{ end }}
